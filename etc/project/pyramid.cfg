########################################################################################################################
# Project specific settings
########################################################################################################################

[v]
project-parts=
    code-analysis
    scripts
    omelette
    instance
    test
# security
    chmod
    chown

[buildout]
versions = versions
find-links=${settings:find-links}
# extra directories to add to the python path
extra-paths+=
# better have mr.developer mananing your eggs, see sources.cfg
develop=
eggs=testcgwb
        ${buildout:package}
package=${settings:application}
package-extras=
auto-checkout =testcgwb

[versions]
# bin/buildout -Nvvvvv |sed -ne "s/.*satisfies '//p" |sed -re "s/==/=/g"| sed -re "s/'.//g"|sort | uniq
pyramid=1.5a2

[sources]
testcgwb = fs testcgwb
# see http://pypi.python.org/pypi/mr.developer for documentation
# better to edit ./sources.cfg

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = src/testcgwb
pre-commit-hook = true
flake8 = True
flake8-ignore = E501,C901
flake8-max-complexity=1000
return-status-codes = True

[scripts]
recipe=zc.recipe.egg
# attacking zopepy:eggs make instance be built after zopepy
# in any case thx to the buildout automatic parts sort.
extra-paths=${buildout:extra-paths}
eggs = ${buildout:eggs}
    z3c.checkversions
    
#Pyramid
    CherryPy
    cryptacular
    gunicorn
    iniparse
    Paste
    PasteDeploy
    Pastescript
    pyramid
    pyramid_chameleon
    pyramid_debugtoolbar
    pyramid_zcml
    repoze.tm2
    repoze.vhm
    waitress
    WebError
    WebOb
    zope.component
#with_tool_coverage
    coverage
#with_binding_pil
    PIL
#with_binding_lxml
    lxml
    elementtree
#with_tool_ipython
    ipython
#with_tool_bpython
    bpython
#with_tool_nose
    nose
# Scripts generated filtering
scripts=
        checkversions
        paster
        pcreate
        pdistreport
        prequest
        proutes
        pserve
        pserve
        pshell
        ptweens
        pviews
        waitress-serve
        paster
    
#with_tool_bpython
    bpython
#with_tool_nose
    nosetests
    nose
#with_tool_ipython
    ipython
interpreter = pyramidpy
dependant-scripts=true

[test]
recipe = zc.recipe.testrunner
eggs = ${scripts:eggs}
script = selftest

[omelette]
order=${scripts:recipe}
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}
packages =${scripts:extra-paths}

# zope.testing testrunner support
[testenv]

# This testrunner is a zc.recipe.testrunner like
# See http://pypi.python.org/pypi/zc.recipe.testrunner/
# It can do xml reports addon if you supply -x as a command line argument
# It is useful for generating reports for hudson or other contineous integration
[testcgwb.test]
recipe = collective.xmltestreport
eggs =
    ${buildout:package} ${buildout:package-extras}
    ${scripts:eggs}
extra-paths = ${scripts:extra-paths}
defaults = ['--exit-with-status', '--auto-color', '--auto-progress', '-s', '${buildout:package}']
environment = testenv

[instance]
name = instance
recipe = collective.recipe.template
server = egg:waitress#main
# set here your project application wsgi application
egg=${settings:application}
ep=${instance:egg}
input = ${buildout:directory}/etc/templates/wsgi/paster.ini.in
output = ${buildout:directory}/etc/wsgi/instance.ini
host=${hosts:instance}
port=${ports:instance}
intercept_exc_debug=debug
debugtoolbar.eval_exc=true
debug=true
# points to egg/jinja2 directory
jinja2_templates=${instance:egg}:jinja2
commit_veto = pyramid_tm.default_commit_veto
# scheme type can be zeo | file
# see https://docs.pylonsproject.org/projects/pyramid_zodbconn/dev/
zodb = zeo://${hosts:zeo}:${ports:zeo}

[chmod]
recipe = plone.recipe.command
update-command = ${chmod:command}
command=
    chmod 600 .installed.cfg
    chmod 744 ${buildout:directory}/bin/*
    chmod -v 750 ${buildout:directory}/etc/init.d/*
    chmod -Rf 700 ${buildout:directory}/etc
    chmod -Rf 700 ${buildout:directory}/var
    chmod  700 ${buildout:directory}

[chown]
recipe = plone.recipe.command
update-command = ${chown:command}
command=
    chown -Rf  ${users:pyramid}  ${buildout:directory}/etc
    chown -Rf  ${users:pyramid}  ${buildout:directory}/var
    chown      ${users:pyramid}  ${buildout:directory}

# vim:set ft=cfg:
